name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'
      - name: Linux smoke (tests/fuzz/repro/summary)
        run: |
          bash ./scripts/linux/smoke.sh
      - name: Upload artifacts directory
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: artifacts/
      - name: Publish JUnit test results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: artifacts/junit.xml
      - name: Append stats and summary to job summary
        if: always()
        run: |
          {
            echo "### Fuzz stats (parser)";
            if [ -f artifacts/stats_parser.json ]; then cat artifacts/stats_parser.json; else echo "(no stats_parser.json)"; fi;
            echo;
            echo "### Fuzz stats (parser-lax)";
            if [ -f artifacts/stats_parser_lax.json ]; then cat artifacts/stats_parser_lax.json; else echo "(no stats_parser_lax.json)"; fi;
            echo;
            echo "### Test summary (flaky recovered)";
            if [ -f artifacts/junit_summary.json ]; then cat artifacts/junit_summary.json; else echo "(no junit_summary.json)"; fi;
          } >> "$GITHUB_STEP_SUMMARY"

  windows-iocp-tests:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'
      - name: IOCP unit tests (experimental, extended)
        env:
          ORIZON_WIN_IOCP: "1"
          ORIZON_WIN_WRITABLE_INTERVAL_MS: "10"
        run: |
          go test -tags iocp ./internal/runtime/asyncio -v

  windows-wsapoll-tests:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'
      - name: WSAPoll unit tests (env throttling + deregister robustness)
        env:
          ORIZON_WIN_WSAPOLL: "1"
          ORIZON_WIN_PORTABLE: "0"
          ORIZON_WIN_IOCP: "0"
          ORIZON_WIN_WRITABLE_INTERVAL_MS: "10"
        run: |
          go test ./internal/runtime/asyncio -run "WSAPoll|WritableThrottling" -v

  macos-smoke:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'
      - name: macOS smoke (tests/fuzz/repro)
        run: |
          bash ./scripts/linux/smoke.sh
      - name: Upload artifacts directory (macOS)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-macos
          path: artifacts/

  windows-smoke:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'
      - name: Windows smoke (tests/fuzz/repro/IOCP)
        run: |
          powershell -ExecutionPolicy Bypass -File .\scripts\win\smoke.ps1
      - name: Upload artifacts directory (Windows)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-windows
          path: artifacts/
