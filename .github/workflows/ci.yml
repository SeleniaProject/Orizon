name: Orizon CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  GO_VERSION: '1.24.x'
  CGO_ENABLED: 0

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
          
    - name: Download dependencies
      run: go mod download
      
    - name: Verify go.mod is tidy
      run: |
        go mod tidy
        git diff --exit-code go.mod go.sum
        
    - name: Build
      run: make build-all
      
    - name: Test (short)
      run: go test -timeout=10m -short ./...
      
    - name: Test with race detector (Linux only)
      if: runner.os == 'Linux'
      run: go test -timeout=10m -race -short ./...

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest
        
    - name: go vet
      run: go vet ./...
      
    - name: staticcheck
      uses: dominikh/staticcheck-action@v1.3.1
      with:
        version: "latest"

  security:
    name: Security
    runs-on: ubuntu-latest
    
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        
    - name: Run Gosec Security Scanner
      uses: securecodewarrior/github-action-gosec@master
      with:
        args: '-fmt sarif -out gosec.sarif ./...'
        
    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: gosec.sarif
        
    - name: Run govulncheck
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        govulncheck ./...
